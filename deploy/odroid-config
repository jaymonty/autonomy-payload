#!/bin/sh
# Part of raspi-config http://github.com/asb/raspi-config
#
# See LICENSE file for copyright and license details

# EDIT 2013-12-10 by Sebastian Fiedler <basti@unix-solution.de>
# to expand rootfs on my odroid-X on-the-fly.
# It can also used for setting keyboard-config, timezone, locales and hostname.

INTERACTIVE=True
ASK_TO_REBOOT=0

calc_wt_size() {
  # NOTE: it's tempting to redirect stderr to /dev/null, so supress error 
  # output from tput. However in this case, tput detects neither stdout or 
  # stderr is a tty and so only gives default 80, 24 values
  WT_HEIGHT=17
  WT_WIDTH=$(tput cols)

  if [ -z "$WT_WIDTH" ] || [ "$WT_WIDTH" -lt 60 ]; then
    WT_WIDTH=80
  fi
  if [ "$WT_WIDTH" -gt 178 ]; then
    WT_WIDTH=120
  fi
  WT_MENU_HEIGHT=$(($WT_HEIGHT-8))
}

do_about() {
  whiptail --msgbox "\
This tool is based on raspi-config.
It's usefull to resize root partition on-the-fly.
Or also used for setting keyboard-config, timezone, locales and hostname.

Frist modify by: basti122303
Changed by: mdrjr
" 20 70 1
}

do_expand_rootfs() {

  p2_start=`fdisk -l /dev/mmcblk0 | grep mmcblk0p2 | awk '{print $2}'`
  fdisk /dev/mmcblk0 <<EOF
p
d
2
n
p
2
$p2_start

p
w
EOF
  ASK_TO_REBOOT=1

  # now set up an init.d script
cat <<\EOF > /etc/init.d/resize2fs_once &&
#!/bin/sh
### BEGIN INIT INFO
# Provides:          resize2fs_once
# Required-Start:
# Required-Stop:
# Default-Start: 2 3 4 5 S
# Default-Stop:
# Short-Description: Resize the root filesystem to fill partition
# Description:
### END INIT INFO

. /lib/lsb/init-functions

case "$1" in
  start)
    log_daemon_msg "Starting resize2fs_once" &&
    resize2fs /dev/mmcblk0p2 &&
    rm /etc/init.d/resize2fs_once &&
    update-rc.d resize2fs_once remove &&
    log_end_msg $?
    ;;
  *)
    echo "Usage: $0 start" >&2
    exit 3
    ;;
esac
EOF
  chmod +x /etc/init.d/resize2fs_once &&
  update-rc.d resize2fs_once defaults &&
  if [ "$INTERACTIVE" = True ]; then
    whiptail --msgbox "Root partition has been resized.\nThe filesystem will be enlarged upon the next reboot" 20 60 2
  fi
}

do_change_hostname() {
  whiptail --msgbox "\
Please note: RFCs mandate that a hostname's labels \
may contain only the ASCII letters 'a' through 'z' (case-insensitive), 
the digits '0' through '9', and the hyphen.
Hostname labels cannot begin or end with a hyphen. 
No other symbols, punctuation characters, or blank spaces are permitted.\
" 20 70 1

  CURRENT_HOSTNAME=`cat /etc/hostname | tr -d " \t\n\r"`
  NEW_HOSTNAME=$(whiptail --inputbox "Please enter a hostname" 20 60 "$CURRENT_HOSTNAME" 3>&1 1>&2 2>&3)
  if [ $? -eq 0 ]; then
    echo $NEW_HOSTNAME > /etc/hostname
    echo "127.0.0.1 $NEW_HOSTNAME" >> /etc/hosts
    ASK_TO_REBOOT=1
  fi
}

do_ssh() {
  if [ -e /var/log/regen_ssh_keys.log ] && ! grep -q "^finished" /var/log/regen_ssh_keys.log; then
    whiptail --msgbox "Initial ssh key generation still running. Please wait and try again." 20 60 2
    return 1
  fi
  whiptail --yesno "Would you like the SSH server enabled or disabled?" 20 60 2 \
    --yes-button Enable --no-button Disable
  RET=$?
  if [ $RET -eq 0 ]; then
    update-rc.d ssh enable &&
    invoke-rc.d ssh start &&
    whiptail --msgbox "SSH server enabled" 20 60 1
  elif [ $RET -eq 1 ]; then
    update-rc.d ssh disable &&
    whiptail --msgbox "SSH server disabled" 20 60 1
  else
    return $RET
  fi
}

disable_odroid_config_at_boot() {
  if [ -e /etc/profile.d/odroid-config.sh ]; then
    rm -f /etc/profile.d/odroid-config.sh
    cp /usr/local/hardkernel/tty1-original.conf /etc/init/tty1.conf
    cp /usr/local/hardkernel/lightdm.conf /etc/init/lightdm.conf
    telinit q
  fi
}

do_finish() {
  disable_odroid_config_at_boot
  if [ $ASK_TO_REBOOT -eq 1 ]; then
    whiptail --yesno "Would you like to reboot now?" 20 60 2
    if [ $? -eq 0 ]; then # yes
      sync
      reboot
    fi
  fi
  exit 0
}

# $1 = filename, $2 = key name
get_json_string_val() {
  sed -n -e "s/^[[:space:]]*\"$2\"[[:space:]]*:[[:space:]]*\"\(.*\)\"[[:space:]]*,$/\1/p" $1
}

do_advanced_menu() {
  FUN=$(whiptail --title "ODROID Configuration Tool (odroid-config)" --menu "Advanced Options" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT --cancel-button Back --ok-button Select \
    "A1 Hostname" "Set the visible name for this Odroid-X on a network" \
    "A2 SSH" "Enable/Disable remote command line access to your ODROID using SSH" \
    3>&1 1>&2 2>&3)
  RET=$?
  if [ $RET -eq 1 ]; then
    return 0
  elif [ $RET -eq 0 ]; then
    case "$FUN" in
      A1\ *) do_change_hostname ;;
      A2\ *) do_ssh ;;
      *) whiptail --msgbox "Programmer error: unrecognized option" 20 60 1 ;;
    esac || whiptail --msgbox "There was an error running option $FUN" 20 60 1
  fi
}

do_xorg() {
  FUN=$(whiptail --title "ODROID Configuration Tool (odroid-config)" --menu "Graphical Config" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT --cancel-button Back --ok-button Select \
    "Enable " "Enable Xorg at boot" \
    "Disable " "Disable Xorg at boot" \
    3>&1 1>&2 2>&3)
  RET=$?
  if [ $RET -eq 1 ]; then
    return 0
  elif [ $RET -eq 0 ]; then
    case "$FUN" in
      Enable\ *) 
		rm -rf /etc/init/lightdm.override
		ASK_TO_REBOOT=1
		;;
	  Disable\ *)
		echo "manual" > /etc/init/lightdm.override
		ASK_TO_REBOOT=1
		;;
      *) whiptail --msgbox "Programmer error: unrecognized option" 20 60 1 ;;
    esac || whiptail --msgbox "There was an error running option $FUN" 20 60 1
  fi	
}

do_hdmi() {
  FUN=$(whiptail --title "ODROID Configuration Tool (odroid-config)" --menu "HDMI Config" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT --cancel-button Back --ok-button Select \
    "HDMI1 " "1024x768 (DVI NO EDID)" \
    "HDMI2 " "720P (1280x720) (DVI NO EDID)" \
    "HDMI3 " "720P (1280x720) (HDMI EDID)" \
    "HDMI4 " "1080P (1920x1080) (DVI NO EDID)" \
    "HDMI5 " "1080P (1920x1080) (HDMI EDID)" \
    "HDMI6 " "Automatic Probe (Via Screen EDID)" \
    3>&1 1>&2 2>&3)
  RET=$?
  if [ $RET -eq 1 ]; then
    return 0
  elif [ $RET -eq 0 ]; then
    case "$FUN" in
      HDMI1\ *) 
	cp /media/boot/boot-1024x768-noedid.scr /media/boot/boot.scr
        whiptail --msgbox "HDMI Configured to $FUN 1024x768 (DVI NO EDID)." 20 60 2
	ASK_TO_REBOOT=1
	;;
      HDMI2\ *) 
	cp /media/boot/boot-720p-noedid.scr /media/boot/boot.scr
        whiptail --msgbox "HDMI Configured to $FUN 720P (1280x720) (DVI NO EDID)." 20 60 2
	ASK_TO_REBOOT=1
	;;
      HDMI3\ *)
	cp /media/boot/boot-720p-edid.scr /media/boot/boot.scr
        whiptail --msgbox "HDMI Configured to $FUN 720P (1280x720) (HDMI EDID)." 20 60 2
	ASK_TO_REBOOT=1
	;;
      HDMI4\ *)
	cp /media/boot/boot-1080p-noedid.scr /media/boot/boot.scr
        whiptail --msgbox "HDMI Configured to $FUN 1080P (1920x1080) (DVI NO EDID)." 20 60 2
	ASK_TO_REBOOT=1
	;;
      HDMI5\ *)
	cp /media/boot/boot-1080p-edid.scr /media/boot/boot.scr
        whiptail --msgbox "HDMI Configured to $FUN 1080P (1920x1080) (HDMI EDID)." 20 60 2
	ASK_TO_REBOOT=1	
	;;
      HDMI6\ *)
	cp /media/boot/boot-auto_edid.scr /media/boot/boot.scr
        whiptail --msgbox "HDMI Configured to $FUN Automatic Probe (Via Screen EDID)." 20 60 2
	ASK_TO_REBOOT=1
	;;

      *) whiptail --msgbox "Programmer error: unrecognized option" 20 60 1 ;;
    esac || whiptail --msgbox "There was an error running option $FUN" 20 60 1
  fi	
}


#
# Interactive use loop
#
calc_wt_size
while true; do
  FUN=$(whiptail --title "Odroid Configuration Tool (odroid-config)" --menu "Setup Options" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT --cancel-button Finish --ok-button Select \
    "1 Expand Filesystem" "Expand root partition to fill SD/eMMC Storage" \
    "2 Advanced Options" "Configure advanced settings" \
    "3 Configure HDMI" "Configure HDMI Resolutions" \
    "4 Configure Graphical" "Enable or Disable the Graphical Interface (Xorg)" \
    "5 About odroid-config" "Information about this configuration tool" \
    3>&1 1>&2 2>&3)
  RET=$?
  if [ $RET -eq 1 ]; then
    do_finish
  elif [ $RET -eq 0 ]; then
    case "$FUN" in
      1\ *) do_expand_rootfs ;;
      2\ *) do_advanced_menu ;;
      3\ *) do_hdmi ;;
      4\ *) do_xorg ;;
      5\ *) do_about ;;
      *) whiptail --msgbox "Programmer error: unrecognized option" 20 60 1 ;;
    esac || whiptail --msgbox "There was an error running option $FUN" 20 60 1
  else
    exit 1
  fi
done

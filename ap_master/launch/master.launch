<!-- This is the main launch file for all autonomy-payload instance -->

<!-- Note: args 'id' and 'name' are mandatory -->

<launch>

  <!-- User-supplied arguments -->
  <arg name="id" default="0" />           <!-- Aircraft ID -->
  <arg name="name" default="foo" />       <!-- Aircraft Name -->
  <arg name="gps" default="1" />          <!-- Autopilot has GPS signal; sync clock -->
  <arg name="do_ctlr" default="1" />      <!-- Run the controller nodes -->
  <arg name="do_bag" default="1" />       <!-- Enable rosbagging -->
  <arg name="do_verify" default="1" />    <!-- Enable param/fence/rally/wp verification -->
  <arg name="ap_dev" default="/dev/ttyUSB*" />  <!-- Device string -->
  <arg name="net_dev" default="wlan0" />  <!-- Network device -->
  <arg name="net_port" default="5554" />  <!-- Network port -->

  <!-- Derived (conditional) arguments -->
  <arg name="gps_arg" default="--gps-time-hack" if="$(arg gps)" />
  <arg name="gps_arg" default="" unless="$(arg gps)" />

  <!-- Instance ROS parameters -->
  <param name="aircraft_id" type="int" value="$(arg id)" />
  <param name="aircraft_name" type="str" value="$(arg name)" />
  <param name="network_device" type="str" value="$(arg net_dev)" />
  <param name="network_port" type="int" value="$(arg net_port)" />
  <param name="subswarm_id" type="int" value="0" />
  <param name="flight_ready" type="bool" value="false" />
  <param name="rosbag_enable" type="bool" value="$(arg do_bag)" />
  <param name="verify_enable" type="bool" value="$(arg do_verify)" />

  <!-- Core Nodes -->

  <node name="autopilot" pkg="autopilot_bridge" type="mavbridge.py" output="screen" args="--device $(arg ap_dev) --baudrate 1500000 --serial-relief 1024 -m acs -m file -m fpr -m slave -m wp -m ap_msg_queue $(arg gps_arg)" />

  <node name="safety" pkg="ap_safety_monitor" type="safety.py" output="screen" >
    <remap from="safety/heartbeat" to="autopilot/heartbeat_onboard" />
    <remap from="safety/gnd_heartbeat" to="autopilot/heartbeat_ground" />
    <remap from="safety/ap_pose" to="autopilot/acs_pose" />
  </node>

  <node name="network" pkg="ap_network_bridge" type="network.py" output="screen" args="" >
    <remap from="network/recv_heart_ground" to="autopilot/heartbeat_ground" />
    <remap from="network/recv_arm" to="autopilot/arm" />
    <remap from="network/recv_mode" to="autopilot/mode_num" />
    <remap from="network/recv_land" to="autopilot/land" />
    <remap from="network/recv_land_abort" to="autopilot/land_abort" />
    <remap from="network/recv_guided_goto" to="autopilot/payload_waypoint" />
    <remap from="network/recv_waypoint_goto" to="autopilot/waypoint_goto" />
    <remap from="network/recv_follower_set" to="controllers/follower_set" />
    <remap from="network/recv_sequencer_set" to="controllers/wp_sequencer_set" />
    <remap from="network/recv_ap_reboot" to="autopilot/reboot" />
    <remap from="network/send_pose" to="autopilot/acs_pose" />
    <remap from="network/update_subswarm" to="swarm_manager/update_subswarm" />
    <remap from="network/swarm_state" to="swarm_manager/swarm_state" />
    <remap from="network/update_flight_status" to="autopilot/status" />
    <remap from="network/update_ctlr_status" to="controllers/selector_status" />
    <remap from="network/slave_setup" to="autopilot/slave_setup" />
    <remap from="network/controller_mode" to="ctlr_selector/set_selector_mode" />
    <remap from="network/pause_current_ctlr" to="ctlr_selector/pause_current_ctlr" />
    <remap from="network/cal_pressure" to="autopilot/cal_pressure" />
    <remap from="network/cal_gyros" to="autopilot/cal_gyros" />
    <remap from="network/demo_servos" to="autopilot/demo_servos" />
    <remap from="network/demo_motor" to="autopilot/demo_motor" />
    <remap from="network/health_state" to="safety/set_health_state" />
    <remap from="network/set_swarm_behavior" to="swarm_manager/set_swarm_behavior" />
    <remap from="network/swarm_behavior" to="swarm_manager/swarm_behavior" />
    <remap from="network/set_swarm_state" to="swarm_manager/set_swarm_state" />
    <remap from="network/run_swarm_sequence_land" to="swarm_manager/run_swarm_sequence_land" />
    <remap from="network/run_swarm_fixed_formation" to="swarm_manager/run_swarm_fixed_formation" />
    <remap from="network/run_swarm_search" to="swarm_manager/run_swarm_search" />
    <remap from="network/send_swarm_search_waypoint" to="swarm_searcher/send_swarm_search_waypoint" />
    <remap from="network/param_setlist" to="autopilot/fpr_param_setlist" />
    <remap from="network/load_param" to="autopilot/load_param" />
    <remap from="network/load_fence" to="autopilot/load_fence" />
    <remap from="network/load_rally" to="autopilot/load_rally" />
    <remap from="network/load_wp" to="autopilot/load_wp" />
    <remap from="network/recv_weather" to="autopilot/weather_update" />
    <remap from="network/ap_msg_queue_last_n" to="autopilot/ap_msg_queue_last_n" />
  </node>

  <node name="swarm_tracker" pkg="ap_perception" type="swarm_tracker_node.py" output="screen" args="" >
    <remap from="swarm_tracker/acs_pose" to="autopilot/acs_pose" />
    <remap from="swarm_tracker/recv_pose" to="network/recv_pose" />
    <remap from="swarm_tracker/recv_swarm_ctl_state" to="network/recv_swarm_ctl_state" />
    <remap from="swarm_tracker/swarm_state" to="swarm_manager/swarm_state" />
    <remap from="swarm_tracker/swarm_behavior" to="swarm_manager/swarm_behavior" />
    <remap from="swarm_tracker/update_subswarm" to="swarm_manager/update_subswarm" />
  </node>

  <node name="task_runner" pkg="ap_tasks" type="task_runner.py" output="screen" args="" />

  <node name="recv_pose_rate" pkg="ap_logging" type="recv_pose_rate.py" output="screen" args="" />

  <!-- Controller Nodes -->

  <group if="$(arg do_ctlr)">
    <node name="follower" pkg="ap_path_planning" type="follower_node.py" output="screen" args="">
      <remap from="follower/payload_waypoint" to="autopilot/payload_waypoint" />
      <remap from="follower/payload_intent" to="network/payload_intent" />
      <remap from="follower/ctlr_status" to="controllers/ctlr_status" />
      <remap from="follower/swarm_uav_states" to="swarm_tracker/swarm_uav_states" />
      <remap from="follower/follower_set" to="controllers/follower_set" />
    </node>

    <node name="swarm_landing_sequencer" pkg="ap_path_planning" type="swarm_landing_sequencer.py" output="screen" args="">
      <remap from="swarm_landing_sequencer/payload_waypoint" to="autopilot/payload_waypoint" />
      <remap from="swarm_landing_sequencer/payload_intent" to="network/payload_intent" />
      <remap from="swarm_landing_sequencer/set_landing" to="autopilot/set_landing" />
      <remap from="swarm_landing_sequencer/wp_getrange" to="autopilot/wp_getrange" />
      <remap from="swarm_landing_sequencer/fpr_param_set" to="autopilot/fpr_param_set" />
      <remap from="swarm_landing_sequencer/waypoint_goto" to="autopilot/waypoint_goto" />
      <remap from="swarm_landing_sequencer/status" to="autopilot/status" />
      <remap from="swarm_landing_sequencer/ctlr_status" to="controllers/ctlr_status" />
      <remap from="swarm_landing_sequencer/swarm_uav_states" to="swarm_tracker/swarm_uav_states" />
      <remap from="swarm_landing_sequencer/update_subswarm" to="swarm_manager/update_subswarm" />
    </node>

    <node name="wp_sequencer" pkg="ap_path_planning" type="wp_sequencer_node.py" output="screen" args="">
      <remap from="wp_sequencer/payload_waypoint" to="autopilot/payload_waypoint" />
      <remap from="wp_sequencer/ctlr_status" to="controllers/ctlr_status" />
      <remap from="wp_sequencer/acs_pose" to="autopilot/acs_pose" />
      <remap from="wp_sequencer/payload_intent" to="network/payload_intent" />
      <remap from="wp_sequencer/wp_sequencer_set" to="controllers/wp_sequencer_set" />
    </node>

    <node name="swarm_searcher" pkg="ap_path_planning" type="swarm_searcher.py" output="screen" args="" >
	<remap from="swarm_searcher/swarm_uav_states" to="swarm_tracker/swarm_uav_states" />
	<remap from="swarm_searcher/payload_waypoint" to="autopilot/payload_waypoint" />
    	<remap from="swarm_searcher/payload_intent" to="network/payload_intent" />
	<remap from="swarm_searcher/status" to="autopilot/status" />
	<remap from="swarm_searcher/wp_getrange" to="autopilot/wp_getrange" />
	<remap from="swarm_searcher/ctlr_status" to="controllers/ctlr_status" />
	<remap from="swarm_searcher/recv_swarm_search_waypoint" to="network/recv_swarm_search_waypoint" />
        <remap from="swarm_searcher/set_swarm_behavior" to="swarm_manager/set_swarm_behavior" />
	<remap from="swarm_searcher/acs_pose" to="autopilot/acs_pose" />
    </node>

    <node name="ctlr_selector" pkg="ap_mission_planning" type="ctlr_select.py" output="screen" args="" >
      <remap from="ctlr_selector/wp_getall" to="autopilot/wp_getall" />
      <remap from="ctlr_selector/wp_getlast" to="autopilot/wp_getlast" />
      <remap from="ctlr_selector/acs_pose" to="autopilot/acs_pose" />
      <remap from="ctlr_selector/status" to="autopilot/status" />
      <remap from="ctlr_selector/waypoint_goto" to="autopilot/waypoint_goto" />
      <remap from="ctlr_selector/payload_waypoint" to="autopilot/payload_waypoint" />
      <remap from="ctlr_selector/ctlr_status" to="controllers/ctlr_status" />
      <remap from="ctlr_selector/selector_status" to="controllers/selector_status" />
    </node>

    <node name="swarm_manager" pkg="ap_mission_planning" type="swarm_manager.py" output="screen" args="" >
      <remap from="swarm_manager/swarm_uav_states" to="swarm_tracker/swarm_uav_states" />
      <remap from="swarm_manager/subswarm_uav_states" to="swarm_tracker/subswarm_uav_states" />
      <remap from="swarm_manager/swarm_formation_set" to="controllers/swarm_formation_set" />
      <remap from="swarm_manager/follower_set" to="controllers/follower_set" />
      <remap from="swarm_manager/swarm_search_setup" to="swarm_searcher/swarm_search_setup" />
      <remap from="swarm_manager/selector_status" to="controllers/selector_status" />
      <remap from="swarm_manager/set_selector_mode" to="ctlr_selector/set_selector_mode" />
      <remap from="swarm_manager/selector_status" to="controllers/selector_status" />
      <remap from="swarm_manager/recv_subswarm" to="network/recv_subswarm" />
      <remap from="swarm_manager/acs_pose" to="autopilot/acs_pose" />
      <remap from="swarm_manager/status" to="autopilot/status" />
      <remap from="swarm_manager/waypoint_goto" to="autopilot/waypoint_goto" />
      <remap from="swarm_manager/wp_getrange" to="autopilot/wp_getrange" />
      <remap from="swarm_manager/init_landing_sequencer" to="swarm_landing_sequencer/init_landing_sequencer" />
    </node>

  </group>

</launch>
